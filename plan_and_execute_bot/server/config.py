from os import environ
import logging
import sys

LOGGER = logging.getLogger(__name__)

# Configuraci√≥n de LangGraph
LANGGRAPH_URL = environ.get("LANGGRAPH_URL", "http://localhost:2024")
ASSISTANT_ID = environ.get("LANGGRAPH_ASSISTANT_ID", "agent")
CONFIG = environ.get("CONFIG") or "{}"

# Configuraci√≥n de Twilio
TWILIO_AUTH_TOKEN = environ.get("TWILIO_AUTH_TOKEN")
TWILIO_ACCOUNT_SID = environ.get("TWILIO_ACCOUNT_SID")
# Para sandbox no necesitas n√∫mero espec√≠fico - Twilio maneja esto autom√°ticamente
TWILIO_WHATSAPP_NUMBER = environ.get("TWILIO_WHATSAPP_NUMBER", "sandbox")

# Configuraci√≥n de logs
LOG_LEVEL = environ.get("LOG_LEVEL", "INFO")
DEBUG = environ.get("DEBUG", "false").lower() in ("true", "1", "yes")

# Validaci√≥n de configuraci√≥n cr√≠tica
def validate_config():
    """Validar que las configuraciones cr√≠ticas est√©n presentes."""
    missing_vars = []
    
    # Variables cr√≠ticas para Twilio
    if not TWILIO_ACCOUNT_SID:
        missing_vars.append("TWILIO_ACCOUNT_SID")
    if not TWILIO_AUTH_TOKEN:
        missing_vars.append("TWILIO_AUTH_TOKEN")
    
    # Variables cr√≠ticas para LangGraph
    if not LANGGRAPH_URL:
        missing_vars.append("LANGGRAPH_URL")
    
    if missing_vars:
        LOGGER.error(f"‚ùå Faltan variables de entorno cr√≠ticas: {', '.join(missing_vars)}")
        LOGGER.error("üí° Aseg√∫rate de crear un archivo .env con las variables requeridas")
        LOGGER.error("üìù Ver env_example.txt para un ejemplo completo")
        sys.exit(1)
    
    LOGGER.info("‚úÖ Configuraci√≥n validada correctamente")

# Validar configuraci√≥n al importar
validate_config()